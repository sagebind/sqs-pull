name: release-binaries
on:
  release:
    types: [published]

env:
  BINARY_NAME: sqs-pull

jobs:
  linux-x86_64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target x86_64-unknown-linux-musl
          use-cross: true

      - name: Optimize and package binary
        run: |
          cd target/x86_64-unknown-linux-musl/release
          strip $BINARY_NAME
          chmod +x $BINARY_NAME
          tar -c $BINARY_NAME | gzip > $BINARY_NAME.tar.gz

      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_name: ${{ env.BINARY_NAME }}-${{ github.event.release.tag_name }}-linux-x86_64.tar.gz
          asset_path: target/x86_64-unknown-linux-musl/release/${{ env.BINARY_NAME }}.tar.gz
          asset_content_type: application/octet-stream
          upload_url: ${{ github.event.release.upload_url }}

  macos-x86_64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Optimize and package binary
        run: |
          cd target/release
          strip $BINARY_NAME
          chmod +x $BINARY_NAME
          mkdir dmg
          mv $BINARY_NAME dmg/
          hdiutil create -fs HFS+ -srcfolder dmg -volname $BINARY_NAME $BINARY_NAME.dmg

      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_name: ${{ env.BINARY_NAME }}-${{ github.event.release.tag_name }}-macos-x86_64.dmg
          asset_path: target/release/${{ env.BINARY_NAME }}.dmg
          asset_content_type: application/octet-stream
          upload_url: ${{ github.event.release.upload_url }}

  windows-x86_64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_name: ${{ env.BINARY_NAME }}-${{ github.event.release.tag_name }}-windows-x86_64.exe
          asset_path: target/release/${{ env.BINARY_NAME }}.exe
          asset_content_type: application/octet-stream
          upload_url: ${{ github.event.release.upload_url }}
